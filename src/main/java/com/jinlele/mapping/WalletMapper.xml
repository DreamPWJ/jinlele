<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jinlele.dao.WalletMapper" >
  <resultMap id="BaseResultMap" type="com.jinlele.model.Wallet" >
    <id column="walletno" property="walletno" jdbcType="VARCHAR" />
    <result column="accountCode" property="accountcode" jdbcType="CHAR" />
    <result column="balance" property="balance" jdbcType="DOUBLE" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="deleteCode" property="deletecode" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    walletno, accountCode, balance, user_id, deleteCode, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from wallet
    where walletno = #{walletno,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from wallet
    where walletno = #{walletno,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.jinlele.model.Wallet" >
    insert into wallet (walletno, accountCode, balance, 
      user_id, deleteCode, create_time, 
      update_time)
    values (#{walletno,jdbcType=VARCHAR}, #{accountcode,jdbcType=CHAR}, #{balance,jdbcType=DOUBLE}, 
      #{userId,jdbcType=INTEGER}, #{deletecode,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.jinlele.model.Wallet" >
    insert into wallet
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="walletno != null" >
        walletno,
      </if>
      <if test="accountcode != null" >
        accountCode,
      </if>
      <if test="balance != null" >
        balance,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="deletecode != null" >
        deleteCode,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="walletno != null" >
        #{walletno,jdbcType=VARCHAR},
      </if>
      <if test="accountcode != null" >
        #{accountcode,jdbcType=CHAR},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=DOUBLE},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="deletecode != null" >
        #{deletecode,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jinlele.model.Wallet" >
    update wallet
    <set >
      <if test="accountcode != null" >
        accountCode = #{accountcode,jdbcType=CHAR},
      </if>
      <if test="balance != null" >
        balance = #{balance,jdbcType=DOUBLE},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="deletecode != null" >
        deleteCode = #{deletecode,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where walletno = #{walletno,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jinlele.model.Wallet" >
    update wallet
    set accountCode = #{accountcode,jdbcType=CHAR},
      balance = #{balance,jdbcType=DOUBLE},
      user_id = #{userId,jdbcType=INTEGER},
      deleteCode = #{deletecode,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where walletno = #{walletno,jdbcType=VARCHAR}
  </update>

  <select id="selectWalletByUserId" parameterType="java.lang.Integer" resultType="java.lang.String">
      select walletno from wallet where user_id = #{userId}
  </select>

  <select id="selectWalletBalanceByUserId" parameterType="java.lang.Integer" resultType="java.lang.Double">
    select balance from wallet where user_id = #{userId} and deleteCode = '001'
  </select>

  <select id="getWalletByUserId"  resultType="Map" parameterType="java.lang.Integer">
    select walletno , balance from wallet where user_id = #{userId} and deleteCode = '001'
  </select>

</mapper>