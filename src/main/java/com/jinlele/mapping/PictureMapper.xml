<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jinlele.dao.PictureMapper" >
  <resultMap id="BaseResultMap" type="com.jinlele.model.Picture" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="catogory" property="catogory" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="deleteCode" property="deletecode" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, url, catogory, user_id, deleteCode, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer"  >
    select 
    <include refid="Base_Column_List" />
    from picture
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from picture
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jinlele.model.Picture" useGeneratedKeys="true" keyProperty="id">
    insert into picture (id, url, catogory, 
      user_id, deleteCode, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, #{catogory,jdbcType=VARCHAR}, 
      #{userId,jdbcType=INTEGER}, #{deletecode,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.jinlele.model.Picture"  useGeneratedKeys="true" keyProperty="id">
    insert into picture
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="catogory != null" >
        catogory,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="deletecode != null" >
        deleteCode,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="catogory != null" >
        #{catogory,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="deletecode != null" >
        #{deletecode,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
    <selectKey keyProperty="id" resultType="java.lang.Integer">
      select LAST_INSERT_ID() as id
    </selectKey>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jinlele.model.Picture" >
    update picture
    <set >
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="catogory != null" >
        catogory = #{catogory,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="deletecode != null" >
        deleteCode = #{deletecode,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jinlele.model.Picture" >
    update picture
    set url = #{url,jdbcType=VARCHAR},
      catogory = #{catogory,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      deleteCode = #{deletecode,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>