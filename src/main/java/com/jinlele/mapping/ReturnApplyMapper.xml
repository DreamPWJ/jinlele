<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jinlele.dao.ReturnApplyMapper" >
  <resultMap id="BaseResultMap" type="com.jinlele.model.ReturnApply" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="reasonCode" property="reasoncode" jdbcType="CHAR" />
    <result column="memo" property="memo" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="deleteCode" property="deletecode" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, reasonCode, memo, user_id, order_no, deleteCode, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from returnapply
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from returnapply
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jinlele.model.ReturnApply" >
    insert into returnapply (id, reasonCode, memo, 
      user_id, order_no, deleteCode, 
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{reasoncode,jdbcType=CHAR}, #{memo,jdbcType=VARCHAR}, 
      #{userId,jdbcType=INTEGER}, #{orderNo,jdbcType=VARCHAR}, #{deletecode,jdbcType=CHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.jinlele.model.ReturnApply" >
    insert into returnapply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="reasoncode != null" >
        reasonCode,
      </if>
      <if test="memo != null" >
        memo,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="orderNo != null" >
        order_no,
      </if>
      <if test="deletecode != null" >
        deleteCode,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="reasoncode != null" >
        #{reasoncode,jdbcType=CHAR},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="deletecode != null" >
        #{deletecode,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jinlele.model.ReturnApply" >
    update returnapply
    <set >
      <if test="reasoncode != null" >
        reasonCode = #{reasoncode,jdbcType=CHAR},
      </if>
      <if test="memo != null" >
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null" >
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="deletecode != null" >
        deleteCode = #{deletecode,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jinlele.model.ReturnApply" >
    update returnapply
    set reasonCode = #{reasoncode,jdbcType=CHAR},
      memo = #{memo,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      order_no = #{orderNo,jdbcType=VARCHAR},
      deleteCode = #{deletecode,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getReturnApplyInfo" resultType="map" parameterType="java.lang.String">
    select * from returnapply where order_no=#{0}
  </select>
</mapper>