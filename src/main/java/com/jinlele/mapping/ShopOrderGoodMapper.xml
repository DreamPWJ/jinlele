<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jinlele.dao.ShopOrderGoodMapper" >
  <resultMap id="BaseResultMap" type="com.jinlele.model.ShopOrderGood" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="shoporder_no" property="shoporderNo" jdbcType="VARCHAR" />
    <result column="goodchild_id" property="goodchildId" jdbcType="INTEGER" />
    <result column="good_id" property="goodId" jdbcType="INTEGER" />
    <result column="num" property="num" jdbcType="INTEGER" />
    <result column="comment_id" property="commentId" jdbcType="INTEGER" />
    <result column="deleteCode" property="deletecode" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, shoporder_no, goodchild_id, good_id, num, comment_id, deleteCode, create_time, 
    update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from shoporder_good
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from shoporder_good
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jinlele.model.ShopOrderGood" >
    insert into shoporder_good (id, shoporder_no, goodchild_id, 
      good_id, num, comment_id, 
      deleteCode, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{shoporderNo,jdbcType=VARCHAR}, #{goodchildId,jdbcType=INTEGER}, 
      #{goodId,jdbcType=INTEGER}, #{num,jdbcType=INTEGER}, #{commentId,jdbcType=INTEGER}, 
      #{deletecode,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jinlele.model.ShopOrderGood" >
    insert into shoporder_good
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="shoporderNo != null" >
        shoporder_no,
      </if>
      <if test="goodchildId != null" >
        goodchild_id,
      </if>
      <if test="goodId != null" >
        good_id,
      </if>
      <if test="num != null" >
        num,
      </if>
      <if test="commentId != null" >
        comment_id,
      </if>
      <if test="deletecode != null" >
        deleteCode,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="shoporderNo != null" >
        #{shoporderNo,jdbcType=VARCHAR},
      </if>
      <if test="goodchildId != null" >
        #{goodchildId,jdbcType=INTEGER},
      </if>
      <if test="goodId != null" >
        #{goodId,jdbcType=INTEGER},
      </if>
      <if test="num != null" >
        #{num,jdbcType=INTEGER},
      </if>
      <if test="commentId != null" >
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="deletecode != null" >
        #{deletecode,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jinlele.model.ShopOrderGood" >
    update shoporder_good
    <set >
      <if test="shoporderNo != null" >
        shoporder_no = #{shoporderNo,jdbcType=VARCHAR},
      </if>
      <if test="goodchildId != null" >
        goodchild_id = #{goodchildId,jdbcType=INTEGER},
      </if>
      <if test="goodId != null" >
        good_id = #{goodId,jdbcType=INTEGER},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="commentId != null" >
        comment_id = #{commentId,jdbcType=INTEGER},
      </if>
      <if test="deletecode != null" >
        deleteCode = #{deletecode,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jinlele.model.ShopOrderGood" >
    update shoporder_good
    set shoporder_no = #{shoporderNo,jdbcType=VARCHAR},
      goodchild_id = #{goodchildId,jdbcType=INTEGER},
      good_id = #{goodId,jdbcType=INTEGER},
      num = #{num,jdbcType=INTEGER},
      comment_id = #{commentId,jdbcType=INTEGER},
      deleteCode = #{deletecode,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByOrderNoGcid" parameterType="com.jinlele.model.ShopOrderGood">
    update shoporder_good
    set comment_id = #{commentId,jdbcType=INTEGER}
    where shoporder_no = #{shoporderNo,jdbcType=VARCHAR} and goodchild_id = #{goodchildId,jdbcType=INTEGER}
  </update>

  <select id="selectOrderDetailByOrderno" resultType="Map" parameterType="java.lang.String">
    select g.id as goodid,gc.id as gcid,g.title,gc.imgurl,gc.color,g.saleprice,m.num as buynum
    from shoporder_good m
    join good g on g.id=m.good_id
    join goodchild gc on gc.id=m.goodchild_id
    where m.deleteCode='001' and m.shoporder_no=#{orderno};
  </select>

  <!--根据订单号查询服务类订单的详情 如:翻新订单等-->
  <select id="selectServiceOrderDetailByOrderno" resultType="Map" parameterType="java.lang.String">
     SELECT s.price ,s.aturalprice ,s.descrip ,p.url from service  s
        RIGHT JOIN shoporder o on o.orderno = s.order_no
        left join service_picture sp on sp.service_id = s.id
        INNER JOIN picture p on  p.id = sp.picture_id
        where o.orderno = #{orderno}
        order by p.create_time
        limit 1
  </select>


</mapper>